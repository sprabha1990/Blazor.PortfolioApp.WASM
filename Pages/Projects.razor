@page "/projects"
@inject HttpClient _client
@inject NavigationManager NavManager

<div class="container-fluid">
    <div class="row row-cols-1 row-cols-md-2 g-4">
        @foreach(var project in projects)
        {
            <div class="col">
                <a href="/projects/@project.ProjectId" class="card text-white bg-dark border border-warning m-2 h-100">
                    @*<div class="card text-white bg-dark border border-warning m-2 h-100">
                      
                    </div>*@
                    <div class="card-body">
                        <h5 class="card-title d-flex justify-content-center mb-3">@project.ProjectName</h5>
                        <h6 class="card-subtitle mb-2 text-muted">
                            @foreach (var tag in @project.SkillTags.Split(','))
                            {
                                <span class="badge bg-primary rounded-pill m-1">+ @tag</span>
                            }
                        </h6>
                        <p class="card-text">@project.ProjectDescription</p>
                        @if (project.IsPersonalProject)
                        {
                            <div class="d-flex justify-content-end">
                                <span class="badge bg-success rounded-pill m-1">Personal</span>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex justify-content-end">
                                <span class="badge bg-danger rounded-pill m-1">Company</span>
                                <span class="badge bg-danger rounded-pill m-1">@project.CompanyName</span>
                            </div>
                        }
                    </div>
                </a>
            </div>
        }
    </div>
</div>

@code {
    private List<ProjectDetailModel> projects = new();

    protected async override Task OnInitializedAsync()
    {
        NavManager.NavigateTo("/development-in-progress");
        //var portfolio = await _client.GetFromJsonAsync<PortfolioModel>("Portfolio.json");
        //projects = portfolio?.ProjectDetailModel?? new();
    }
}
